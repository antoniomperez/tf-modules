on:
  pull_request:
    types:
      - opened
      - synchronize

name: PR-Pipeline

env:
  DEV_DIRECTORY: dev
  REGION: eu-west-1

jobs:
  validate:
    if: startsWith(github.head_ref, 'module/')
    name: Validate module
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Module path
        id: location
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          LOCATION=$(npx lerna updated --json --all --include-merged-tags | jq '.[] | .location' | tr -d '"')
          echo "::set-output name=location::$LOCATION"

      - name: Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        working-directory: '${{steps.location.outputs.location}}/${{ env.DEV_DIRECTORY }}'
        id: fmt
        run: terraform fmt -check
        continue-on-error: false

      - name: Terraform Init
        working-directory: '${{steps.location.outputs.location}}/${{ env.DEV_DIRECTORY }}'
        run: terraform init
      - name: Terraform Initialize completed
        run: echo "Terraform init has been completed"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.REGION }}
        working-directory: '${{steps.location.outputs.location}}/${{ env.DEV_DIRECTORY }}'
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

  version:
    if: startsWith(github.head_ref, 'module/') && '!failure()'
    name: Bump version
    runs-on: ubuntu-latest
    environment: dev
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Installing packages
        run: yarn install

      - name: Build tf-scripts
        working-directory: packages/tf-scripts
        run: yarn build

      - name: Installing tf scripts
        run: npm install -g ./packages/tf-scripts

      - name: Configuring Git user email
        run: git config --global user.email "actions@github.com"

      - name: Configuring Git user name
        run: git config --global user.name "Github Action Bot"

      - name: bump
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          NAME=$(npx lerna updated --json --all --include-merged-tags | jq '.[] | .name' | tr -d '"')
          tf version --beta --name $NAME

      - name: Pushing Release tag
        run: git push --follow-tags origin HEAD:${GITHUB_HEAD_REF}
